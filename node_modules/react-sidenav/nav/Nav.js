"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var Context_1 = require("react-sidenav/Context");
var createNavItemProp_1 = require("react-sidenav/nav/createNavItemProp");
var constants_1 = require("react-sidenav/constants");
var NavRenderer_1 = require("react-sidenav/nav/NavRenderer");
var Nav = /** @class */ (function (_super) {
    __extends(Nav, _super);
    function Nav() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.renderNavView = function (context) {
            var navItemProp = createNavItemProp_1.createNavItemProp(_this.props, context.theme, context.template, context.selectedPath, constants_1.PATH_SEPARATOR, undefined, context.scheme);
            // we need 1 more layer so pass in our actual prop
            return (React.createElement(NavRenderer_1.NavRenderer, __assign({}, navItemProp),
                " ",
                _this.props.children));
        };
        return _this;
    }
    Nav.prototype.render = function () {
        return (React.createElement(Context_1.Consumer, null, this.renderNavView));
    };
    return Nav;
}(React.PureComponent));
exports.Nav = Nav;
//# sourceMappingURL=Nav.js.map