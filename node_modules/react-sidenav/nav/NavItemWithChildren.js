"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
        return extendStatics(d, b);
    }
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var __assign = (this && this.__assign) || function () {
    __assign = Object.assign || function(t) {
        for (var s, i = 1, n = arguments.length; i < n; i++) {
            s = arguments[i];
            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))
                t[p] = s[p];
        }
        return t;
    };
    return __assign.apply(this, arguments);
};
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var isExpanded_1 = require("react-sidenav/nav/isExpanded");
var createNavItemProp_1 = require("react-sidenav/nav/createNavItemProp");
var NavItem_1 = require("react-sidenav/nav/NavItem");
var constants_1 = require("react-sidenav/constants");
var NavRenderer_1 = require("react-sidenav/nav/NavRenderer");
var NavItemWithChildren = /** @class */ (function (_super) {
    __extends(NavItemWithChildren, _super);
    function NavItemWithChildren(props) {
        var _this = _super.call(this, props) || this;
        _this.state = { isExpanded: false, isHovered: false };
        _this.onClick = function () {
            _this.setState(function (state) {
                return { isExpanded: !state.isExpanded };
            });
        };
        _this.onMouseEnter = function (e) {
            e.stopPropagation();
            _this.toggleHovered();
        };
        _this.onMouseLeave = function (e) {
            e.stopPropagation();
            _this.toggleHovered();
        };
        _this.toggleHovered = function () {
            if (_this.props.context.expandOnHover) {
                _this.setState(function (state) {
                    return __assign({}, state, { isHovered: !state.isHovered });
                });
            }
        };
        _this.toggleExpand = function () {
            _this.setState(function (state) {
                return { isExpanded: !state.isExpanded };
            });
        };
        _this.state = {
            isExpanded: Boolean(isExpanded_1.isExpanded(props.pathId, _this.props.context.selectedPath)),
            isHovered: false
        };
        return _this;
    }
    NavItemWithChildren.prototype.render = function () {
        var _this = this;
        var props = this.props;
        var context = props.context;
        var ChildrenContainer = context.template.children;
        return (React.createElement(React.Fragment, null,
            React.createElement(NavItem_1.NavItem, __assign({}, this.props, { onClick: this.onClick, parentPathId: this.props.pathId, expanded: this.state.isExpanded || this.state.isHovered, onMouseEnter: this.onMouseEnter, onMouseLeave: this.onMouseEnter, isLeaf: false }), this.props.nonNavChildren),
            React.createElement(ChildrenContainer, __assign({}, this.props, { expanded: this.state.isExpanded || this.state.isHovered }), React.Children.toArray(this.props.children).map(function (child, idx) {
                var navItemProp = createNavItemProp_1.createNavItemProp(child.props, props.theme, props.template, context.selectedPath, constants_1.PATH_SEPARATOR, _this.props.parentPathId);
                return (React.createElement(NavRenderer_1.NavRenderer, __assign({}, navItemProp, { parentPathId: _this.props.pathId, key: idx }), child.props.children));
            }))));
    };
    return NavItemWithChildren;
}(React.Component));
exports.NavItemWithChildren = NavItemWithChildren;
//# sourceMappingURL=NavItemWithChildren.js.map